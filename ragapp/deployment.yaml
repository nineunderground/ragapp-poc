---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: ragapp
  name: ragapp
spec:
  type: NodePort
  ports:
    - name: http
      port: 8000
      protocol: TCP
      targetPort: 8000
  selector:
    app: ragapp

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: ragapp
  name: ragapp
spec:
  replicas: 1
  strategy:
    type: RollingUpdate # Recreate, RollingUpdate
  selector:
    matchLabels:
      app: ragapp
  template:
    metadata:
      labels:
        app: ragapp
      name: ragapp
    spec:
      serviceAccountName: ragapp
      containers:
        - name: ragapp
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "/app/scripts/create_qdrant_collection.sh"]
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MODEL_PROVIDER
              value: ollama
            - name: OLLAMA_BASE_URL
              value: "http://ollama.ollama.svc.cluster.local:11434"
            - name: MODEL
              value: llama3:latest
            - name: EMBEDDING_MODEL
              value: nomic-embed-text
            - name: VECTOR_STORE_PROVIDER
              value: qdrant
            - name: QDRANT_URL
              value: "http://qdrant.qdrant.svc.cluster.local:6333"
            - name: QDRANT_COLLECTION
              value: default
            - name: EMBEDDING_DIM
              value: "768"
            - name: QDRANT_API_KEY
              value: ""
            - name: COLLECTION_NAME
              value: default
            - name: DISTANCE_METRIC
              value: Cosine
            - name: VECTOR_SIZE
              value: "768"
          image: ragapp/ragapp:v0.0.8
          imagePullPolicy: IfNotPresent
#          args:
#            - cat
#            - /dev/stdout
          ports:
            - containerPort: 8000
              protocol: TCP
          resources:
             limits:
               cpu: 3000m
               memory: 5Gi
             requests:
               cpu: 500m
               memory: 1000Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          livenessProbe:
            failureThreshold: 30
            tcpSocket:
              port: 8000
            initialDelaySeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 8000
            initialDelaySeconds: 20
            timeoutSeconds: 5
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
